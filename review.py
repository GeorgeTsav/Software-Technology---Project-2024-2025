       #! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    May 20, 2025 11:40:11 AM EEST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path
import DBManager
import MessageScreen

_location = os.path.dirname(__file__)



_bgcolor = '#d9d9d9'
_fgcolor = '#000000'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran: return        
    try: root.tk.call('source',
                os.path.join(_location, 'themes', 'default.tcl'))
    except: pass
    style = ttk.Style()
    style.theme_use('default')
    style.configure('.', font = "TkDefaultFont")
    if sys.platform == "win32":
       style.theme_use('winnative')    
    _style_code_ran = 1

class ReviewScreen:
    def __init__(self, top=None):
            
            

        top.geometry("680x673+485+84")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Toplevel 0")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="#000000")

        self.top = top

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.reviewscreenframe = tk.Frame(self.top)
        self.reviewscreenframe.place(relx=0.018, rely=0.022, relheight=0.964
                , relwidth=0.957)
        self.reviewscreenframe.configure(relief='groove')
        self.reviewscreenframe.configure(borderwidth="2")
        self.reviewscreenframe.configure(relief="groove")
        self.reviewscreenframe.configure(background="#c0c0c0")
        self.reviewscreenframe.configure(highlightbackground="#d9d9d9")
        self.reviewscreenframe.configure(highlightcolor="#000000")

        self.star2 = tk.Button(self.reviewscreenframe)
        self.star2.place(relx=0.382, rely=0.368, height=26, width=37)
        self.star2.configure(activebackground="#d9d9d9")
        self.star2.configure(activeforeground="black")
        self.star2.configure(background="#d9d9d9")
        self.star2.configure(disabledforeground="#a3a3a3")
        self.star2.configure(font="-family {Segoe UI} -size 9")
        self.star2.configure(foreground="#000000")
        self.star2.configure(highlightbackground="#d9d9d9")
        self.star2.configure(highlightcolor="#000000")
        self.star2.configure(text='★')

        self.star3 = tk.Button(self.reviewscreenframe)
        self.star3.place(relx=0.47, rely=0.368, height=26, width=37)
        self.star3.configure(activebackground="#d9d9d9")
        self.star3.configure(activeforeground="black")
        self.star3.configure(background="#d9d9d9")
        self.star3.configure(disabledforeground="#a3a3a3")
        self.star3.configure(font="-family {Segoe UI} -size 9")
        self.star3.configure(foreground="#000000")
        self.star3.configure(highlightbackground="#d9d9d9")
        self.star3.configure(highlightcolor="#000000")
        self.star3.configure(text='★')

        self.star4 = tk.Button(self.reviewscreenframe)
        self.star4.place(relx=0.558, rely=0.368, height=26, width=37)
        self.star4.configure(activebackground="#d9d9d9")
        self.star4.configure(activeforeground="black")
        self.star4.configure(background="#d9d9d9")
        self.star4.configure(disabledforeground="#a3a3a3")
        self.star4.configure(font="-family {Segoe UI} -size 9")
        self.star4.configure(foreground="#000000")
        self.star4.configure(highlightbackground="#d9d9d9")
        self.star4.configure(highlightcolor="#000000")
        self.star4.configure(text='★')

        self.star5 = tk.Button(self.reviewscreenframe)
        self.star5.place(relx=0.644, rely=0.368, height=26, width=37)
        self.star5.configure(activebackground="#d9d9d9")
        self.star5.configure(activeforeground="black")
        self.star5.configure(background="#d9d9d9")
        self.star5.configure(disabledforeground="#a3a3a3")
        self.star5.configure(font="-family {Segoe UI} -size 9")
        self.star5.configure(foreground="#000000")
        self.star5.configure(highlightbackground="#d9d9d9")
        self.star5.configure(highlightcolor="#000000")
        self.star5.configure(text='★')

        self.username = tk.Label(self.reviewscreenframe)
        self.username.place(relx=0.399, rely=0.299, height=34, width=112)
        self.username.configure(activebackground="#d9d9d9")
        self.username.configure(activeforeground="black")
        self.username.configure(anchor='w')
        self.username.configure(background="#ffffff")
        self.username.configure(compound='left')
        self.username.configure(disabledforeground="#a3a3a3")
        self.username.configure(font="-family {Segoe UI} -size 9")
        self.username.configure(foreground="#000000")
        self.username.configure(highlightbackground="#d9d9d9")
        self.username.configure(highlightcolor="#000000")
        self.username.configure(text='''username''')

        self.UserPhoto = tk.Label(self.reviewscreenframe)
        self.UserPhoto.place(relx=0.399, rely=0.025, height=161, width=112)
        self.UserPhoto.configure(activebackground="#d9d9d9")
        self.UserPhoto.configure(activeforeground="black")
        self.UserPhoto.configure(anchor='w')
        self.UserPhoto.configure(background="#8080ff")
        self.UserPhoto.configure(compound='left')
        self.UserPhoto.configure(disabledforeground="#a3a3a3")
        self.UserPhoto.configure(font="-family {Segoe UI} -size 9")
        self.UserPhoto.configure(foreground="#000000")
        self.UserPhoto.configure(highlightbackground="#d9d9d9")
        self.UserPhoto.configure(highlightcolor="#000000")
        self.UserPhoto.configure(text='''userphoto''')

        self.reviewlist = tk.Listbox(self.reviewscreenframe)
        self.reviewlist.place(relx=0.061, rely=0.74, relheight=0.211
                , relwidth=0.181)
        self.reviewlist.configure(background="white")
        self.reviewlist.configure(disabledforeground="#a3a3a3")
        self.reviewlist.configure(font="TkFixedFont")
        self.reviewlist.configure(foreground="#000000")
        self.reviewlist.configure(highlightbackground="#d9d9d9")
        self.reviewlist.configure(highlightcolor="#000000")
        self.reviewlist.configure(selectbackground="#d9d9d9")
        self.reviewlist.configure(selectforeground="black")

        self.Aboutmeframe = tk.Label(self.reviewscreenframe)
        self.Aboutmeframe.place(relx=0.349, rely=0.461, height=31, width=185)
        self.Aboutmeframe.configure(activebackground="#d9d9d9")
        self.Aboutmeframe.configure(activeforeground="black")
        self.Aboutmeframe.configure(anchor='w')
        self.Aboutmeframe.configure(background="#c0c0c0")
        self.Aboutmeframe.configure(compound='left')
        self.Aboutmeframe.configure(disabledforeground="#a3a3a3")
        self.Aboutmeframe.configure(font="-family {Segoe UI} -size 11 -weight bold")
        self.Aboutmeframe.configure(foreground="#000000")
        self.Aboutmeframe.configure(highlightbackground="#d9d9d9")
        self.Aboutmeframe.configure(highlightcolor="#000000")
        self.Aboutmeframe.configure(text='''About me''')

        self.reviews = tk.Label(self.reviewscreenframe)
        self.reviews.place(relx=0.476, rely=0.663, height=31, width=61)
        self.reviews.configure(activebackground="#d9d9d9")
        self.reviews.configure(activeforeground="black")
        self.reviews.configure(anchor='w')
        self.reviews.configure(background="#d9d9d9")
        self.reviews.configure(compound='left')
        self.reviews.configure(disabledforeground="#a3a3a3")
        self.reviews.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.reviews.configure(foreground="#000000")
        self.reviews.configure(highlightbackground="#d9d9d9")
        self.reviews.configure(highlightcolor="#000000")
        self.reviews.configure(text='''Reviews''')

        self.Reviewtext = tk.Text(self.reviewscreenframe)
        self.Reviewtext.place(relx=0.369, rely=0.74, relheight=0.206
                , relwidth=0.298)
        self.Reviewtext.configure(background="white")
        self.Reviewtext.configure(font="TkTextFont")
        self.Reviewtext.configure(foreground="black")
        self.Reviewtext.configure(highlightbackground="#d9d9d9")
        self.Reviewtext.configure(highlightcolor="#000000")
        self.Reviewtext.configure(insertbackground="#000000")
        self.Reviewtext.configure(selectbackground="#d9d9d9")
        self.Reviewtext.configure(selectforeground="black")
        self.Reviewtext.configure(wrap="word")

        self.star1 = tk.Button(self.reviewscreenframe)
        self.star1.place(relx=0.296, rely=0.368, height=26, width=37)
        self.star1.configure(activebackground="#d9d9d9")
        self.star1.configure(activeforeground="black")
        self.star1.configure(background="#d9d9d9")
        self.star1.configure(disabledforeground="#a3a3a3")
        self.star1.configure(font="-family {Segoe UI} -size 9")
        self.star1.configure(foreground="#000000")
        self.star1.configure(highlightbackground="#d9d9d9")
        self.star1.configure(highlightcolor="#000000")
        self.star1.configure(text='★')

        self.SelfReviewText = tk.Text(self.reviewscreenframe)
        self.SelfReviewText.place(relx=0.353, rely=0.508, relheight=0.099
                , relwidth=0.344)
        self.SelfReviewText.configure(background="white")
        self.SelfReviewText.configure(font="TkTextFont")
        self.SelfReviewText.configure(foreground="black")
        self.SelfReviewText.configure(highlightbackground="#d9d9d9")
        self.SelfReviewText.configure(highlightcolor="#000000")
        self.SelfReviewText.configure(insertbackground="#000000")
        self.SelfReviewText.configure(selectbackground="#d9d9d9")
        self.SelfReviewText.configure(selectforeground="black")
        self.SelfReviewText.configure(wrap="word")

        _style_code()
        
        #count for the stars submitted
        self.selected_stars = 0
        
        self.insertstar3 = ttk.Button(self.reviewscreenframe)
        self.insertstar3.place(relx=0.814, rely=0.755, height=26, width=25)
        self.insertstar3.configure(takefocus="")
        self.insertstar3.configure(text='★')
        self.insertstar3.configure(compound='left')
        self.insertstar3.configure(command=lambda: self.set_stars(3))

        self.insertstar4 = ttk.Button(self.reviewscreenframe)
        self.insertstar4.place(relx=0.876, rely=0.755, height=26, width=25)
        self.insertstar4.configure(takefocus="")
        self.insertstar4.configure(text='★')
        self.insertstar4.configure(compound='left')
        self.insertstar4.configure(command=lambda: self.set_stars(4))

        self.insertstar5 = ttk.Button(self.reviewscreenframe)
        self.insertstar5.place(relx=0.937, rely=0.755, height=26, width=25)
        self.insertstar5.configure(takefocus="")
        self.insertstar5.configure(text='★')
        self.insertstar5.configure(compound='left')
        self.insertstar5.configure(command=lambda: self.set_stars(5))

        self.addreviewbutton = tk.Button(self.reviewscreenframe)
        self.addreviewbutton.place(relx=0.768, rely=0.847, height=26, width=87)
        self.addreviewbutton.configure(activebackground="#d9d9d9")
        self.addreviewbutton.configure(activeforeground="black")
        self.addreviewbutton.configure(background="#0080c0")
        self.addreviewbutton.configure(disabledforeground="#a3a3a3")
        self.addreviewbutton.configure(font="-family {Segoe UI} -size 9")
        self.addreviewbutton.configure(foreground="#ffffff")
        self.addreviewbutton.configure(highlightbackground="#d9d9d9")
        self.addreviewbutton.configure(highlightcolor="#000000")
        self.addreviewbutton.configure(text='''Add Review''')
        self.addreviewbutton.configure(command=self.add_review) 

        self.insertstar2 = ttk.Button(self.reviewscreenframe)
        self.insertstar2.place(relx=0.753, rely=0.755, height=26, width=25)
        self.insertstar2.configure(takefocus="")
        self.insertstar2.configure(text='★')
        self.insertstar2.configure(compound='left')
        self.insertstar2.configure(command=lambda: self.set_stars(2))

        self.insertstar1 = ttk.Button(self.reviewscreenframe)
        self.insertstar1.place(relx=0.691, rely=0.755, height=26, width=25)
        self.insertstar1.configure(takefocus="")
        self.insertstar1.configure(text='★')
        self.insertstar1.configure(compound='left')
        self.insertstar1.configure(command=lambda: self.set_stars(1))
        
    def set_stars(self, stars):
        self.selected_stars = stars

        # list of star buttons
        star_buttons = [
            self.insertstar1,
            self.insertstar2,
            self.insertstar3,
            self.insertstar4,
            self.insertstar5
        ]

        # make rating visible
        for i in range(5):
            if i < stars:
                star_buttons[i].configure(text='☆')  # empty stars showing the stars submitted
            else:
                star_buttons[i].configure(text='★')  # full star showing the remaining stars


        
   # check if the user has submitted stars and review doen not surpass 100 words. then add to DB
     
    def add_review(self):
        review_text = self.Reviewtext.get("1.0", tk.END).strip()

        if len(review_text.split()) > 100:
            MessageScreen.MessageScreen().display("Η αξιολόγηση δεν μπορεί να ξεπερνά τις 100 λέξεις.")
            return

        if self.selected_stars == 0:
            MessageScreen.MessageScreen().display("Παρακαλώ επιλέξτε αστέρια πριν προσθέσετε την αξιολόγηση.")
            return

        rev_writer = "current_user"  # username of the user making the review
        rev_user = self.username.cget("text")  # username of the user accepting the review

        db = DBManager.DBManager(host='localhost', user='root', password='', database='petato_db')
        db.connect()
        success = db.add_review(review_text, self.selected_stars, rev_writer, rev_user)
        db.close()
        
        # if everything done correctly reset text and stars
        if success:
            MessageScreen.MessageScreen().display("Η αξιολόγηση προστέθηκε με επιτυχία!")
            self.Reviewtext.delete("1.0", tk.END)
            self.set_stars(0)
        else:
            MessageScreen.MessageScreen().display("Προέκυψε σφάλμα κατά την αποθήκευση της αξιολόγησης.")


if __name__ == '__main__':
    root = tk.Tk()
    root.protocol('WM_DELETE_WINDOW', root.destroy)
    _top1 = root
    _w1 = ReviewScreen(_top1)
    root.mainloop()






      



